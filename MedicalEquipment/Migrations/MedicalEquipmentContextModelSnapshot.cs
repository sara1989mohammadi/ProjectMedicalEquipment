// <auto-generated />
using System;
using MedicalEquipment.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalEquipment.Web.Migrations
{
    [DbContext(typeof(MedicalEquipmentContext))]
    partial class MedicalEquipmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicalEquipment.Web.Models.About", b =>
                {
                    b.Property<int>("About_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Describtion")
                        .IsRequired();

                    b.Property<string>("ImageName")
                        .HasMaxLength(50);

                    b.Property<int>("LangId");

                    b.Property<string>("Summary")
                        .IsRequired();

                    b.HasKey("About_Id");

                    b.HasIndex("LangId");

                    b.ToTable("AboutUs");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Category_Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Contact", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("InstagrmId")
                        .IsRequired();

                    b.Property<int>("LangID");

                    b.Property<string>("Mobil")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("TelegramId")
                        .IsRequired();

                    b.HasKey("Contact_Id");

                    b.HasIndex("LangID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.FormContact", b =>
                {
                    b.Property<int>("FormContact_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("FormContact_Id");

                    b.ToTable("FormContact");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.FormContactModel", b =>
                {
                    b.Property<int>("FormContactModel_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("FormContactModel_Id");

                    b.ToTable("FormContactModel");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Language", b =>
                {
                    b.Property<int>("Lang_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Lang_Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_Id");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("ImageName")
                        .HasMaxLength(50);

                    b.Property<int>("Lang_Id");

                    b.Property<int>("Price");

                    b.Property<bool>("ProductForDisplay");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<bool>("SpecialProduct");

                    b.Property<bool>("Status");

                    b.HasKey("Product_Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Lang_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Service", b =>
                {
                    b.Property<int>("Service_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("ImageName")
                        .HasMaxLength(50);

                    b.Property<int>("Lang_Id");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("Service_Id");

                    b.HasIndex("Lang_Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.ServicesType", b =>
                {
                    b.Property<int>("ServicesType_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageLang_Id");

                    b.Property<int>("Service_Id");

                    b.Property<string>("Tittle");

                    b.HasKey("ServicesType_Id");

                    b.HasIndex("LanguageLang_Id");

                    b.HasIndex("Service_Id");

                    b.ToTable("ServicesType");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.SliderImage", b =>
                {
                    b.Property<int>("SliderImage_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasMaxLength(50);

                    b.Property<int>("Lang_Id");

                    b.Property<string>("Title");

                    b.HasKey("SliderImage_Id");

                    b.HasIndex("Lang_Id");

                    b.ToTable("SliderImage");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveCode")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("UserAvatar")
                        .HasMaxLength(200);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.About", b =>
                {
                    b.HasOne("MedicalEquipment.Web.Models.Language", "Language")
                        .WithMany("Abouts")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Contact", b =>
                {
                    b.HasOne("MedicalEquipment.Web.Models.Language", "Language")
                        .WithMany("Contacts")
                        .HasForeignKey("LangID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Product", b =>
                {
                    b.HasOne("MedicalEquipment.Web.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEquipment.Web.Models.Language", "Language")
                        .WithMany("Products")
                        .HasForeignKey("Lang_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.Service", b =>
                {
                    b.HasOne("MedicalEquipment.Web.Models.Language", "Language")
                        .WithMany("Service")
                        .HasForeignKey("Lang_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.ServicesType", b =>
                {
                    b.HasOne("MedicalEquipment.Web.Models.Language")
                        .WithMany("ServicesType")
                        .HasForeignKey("LanguageLang_Id");

                    b.HasOne("MedicalEquipment.Web.Models.Service", "Service")
                        .WithMany("ServicesType")
                        .HasForeignKey("Service_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEquipment.Web.Models.SliderImage", b =>
                {
                    b.HasOne("MedicalEquipment.Web.Models.Language", "Language")
                        .WithMany("SliderImages")
                        .HasForeignKey("Lang_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
